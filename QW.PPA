; #= ppqbot -rs
; ########################################
; Peace and Protection
; Q (standard addon)
; ########################################

; Adds Q support to PnP on Quakenet. It has auto-login features.
; Copyright (C) 2022  Sven Roelse
; 
; 
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
; 
; 
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; 
; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <https://www.gnu.org/licenses/>.

#.ppa.info off
[qwcommands]
ADDUSER=/msg Q ADDUSER <#channel> [+<flags>] <nick1|#auth1> [<nick2|#auth2> [...]]
AUTH=/msg Q@CServe.quakenet.org AUTH <user> <password>
AUTHHISTORY=/msg Q AUTHHISTORY 
AUTOLIMIT=/msg Q AUTOLIMIT <#channel> [<threshold>]
BANCLEAR=/msg Q BANCLEAR <#channel>
BANDEL=/msg Q BANDEL <#channel> <#num|banmask>
BANLIST=/msg Q BANLIST <#channel> 
BANTIMER=/msg Q BANTIMER <#channel> [<duration>]
CHALLENGE=/msg Q@CServe.quakenet.org CHALLENGE
CHALLENGEAUTH=/msg Q@CServe.quakenet.org CHALLENGEAUTH <username> <response> <algorithm> 
CHANFLAGS=/msg Q CHANFLAGS <#channel> [+|-<flags>]
CHANLEV=/msg Q CHANLEV <#channel> [<nick|#auth> [+|-<flags>]]
CHANMODE=/msg Q CHANMODE <#channel> [<modes>|none] 
CHANOPHISTORY=/msg Q CHANOPHISTORY <#channel>
CHANSTAT=/msg Q CHANSTAT <#channel> [RESET] 
CLEARCHAN=/msg Q CLEARCHAN <#channel> 
DEOPALL=/msg Q DEOPALL <#channel>	 
EMAIL=/msg Q@CServe.quakenet.org EMAIL <password> <email@address.com> <email@address.com> 
GIVEOWNER=/msg Q GIVEOWNER <#channel> <nick|#authname> [<code>] 
HELLO=/msg Q HELLO <email@address.com> <email@address.com> 
HELP=/msg Q HELP [<command>] 
INVITE=/msg Q INVITE [<#channel>] 
NEWPASS=/msg Q@CServe.quakenet.org NEWPASS <oldpassword> <newpassword> <newpassword> 
OP=/msg Q OP [<#channel> [<nick1> [<nick2> [...]]]] 
PERMBAN=/msg Q PERMBAN <#channel> <banmask> [<reason>] 
RECOVER=/msg Q RECOVER <#channel> 
REMOVEUSER=/msg Q REMOVEUSER <#channel> <nick1|#auth1> [<nick2|#auth2> [...]] 
REQUESTOWNER=/msg Q REQUESTOWNER <#channel> 
REQUESTPASSWORD=/msg Q REQUESTPASSWORD <email@address.com> 
RESET=/msg Q RESET <username> <code> 
SETTOPIC=/msg Q SETTOPIC <#channel> [<topic>] 
SHOWCOMMANDS=/msg Q SHOWCOMMANDS [<mask>] 
TEMPBAN=/msg Q TEMPBAN <#channel> <banmask> <duration> [<reason>] 
UNBANALL=/msg Q UNBANALL <#channel> 
UNBANMASK=/msg Q UNBANMASK <#channel> <mask> 
UNBANME=/msg Q UNBANME <#channel> 
USERFLAGS=/msg Q USERFLAGS [+|-<flags>] 
USERS=/msg Q USERS <#channel> 
VERSION=/msg Q VERSION
VOICE=/msg Q VOICE [<#channel> [<nick1> [<nick2> [...]]]] 
WELCOME=/msg Q WELCOME <#channel> [<message>] 
WHOAMI=/msg Q WHOAMI 
WHOIS=/msg Q WHOIS <nick|#authname>
[addon]
name=Q Bot
group=Extras
popup=Q Bot
author=acvxqs
version=1.3
url=
email=
id=ppqbot
ppver=4.22
unload=
hashcid=
dialogs=
[files]
1=qw.ppa
[notes]
1=This addon adds Q support to PnP on Quakenet. It has auto-login features.
[menu]
1=$_qwloginpop
2=%.qwlogin.1 :qw AUTO LOGIN $qwloginas(1)
3=-
4=View all auto-logins:qw AUTO VIEW
5=Clear all auto-logins:_okcancel 1 Delete ALL $_qwall auto-logins? | qw AUTO CLEAR
[query]
1=$_qwall
2=.Whois user:qw WHOIS $1
[interfaces]
bot=
#.ppa.info end

on *:LOAD:{
  ; PnP check
  if (!$_ispnp) {
    echo 4 -ati2 *** This addon requires Peace and Protection by pai to use.
    echo 4 -ati2 *** You can download Peace and Protection at https://pnp.kristshell.net/
    .timer -mio 1 0 .unload -rs " $+ $script $+ "
    halt
  }
  ; Invalid load method check
  if (!$istok($_cfgx(addons,ids),$readini($script,n,addon,id),32)) {
    .timer -mio 1 0 .unload -rs " $+ $script $+ "
    dispa Unloading ' $+ $script $+ ' $chr(40) $+ addon is not properly loaded; use /addon to load it $+ $chr(41)
    halt
  }
  if (!$read(script\NETWFEAT.DAT,nts,Quakenet)) { 
    write -a SCRIPT\NETWFEAT.DAT Quakenet qw u Q@CServe.quakenet.org 
    dispa Updated SCRIPT\NETWFEAT.DAT...
  }
  if (($level(Q!TheQBot@CServe.quakenet.org) == $null) || ($v1 < 50)) {
    _okcancel 1 Would you like to add Qbot to your userlist with access level 50 (safe from protections)?
    user Q!TheQBot@CServe.quakenet.org * 50 
  }
}
alias -l _qwcmd if ($_isserv(qw)) return /qw
alias _qwall if ($_isserv(qw)) return $hget(pnp. $+ $cid,-servnick)

; /qw command [#chan|?] [params]
alias qw {
  if (($_isserv(qw) == $false) && (($1 != AUTO) || ($istok(ADD DEL VIEW CLEAR,$2,32) == $false))) { _error You cannot use /qw on this network.  $+ /qw only works on networks with Q bot (Quakenet). }
  var %chan, %param, %qw = $hget(pnp. $+ $cid,-servnick), %pw, %send, %who, %new, %old
  if ($1 == $null) { var %cmd = $_qwcmd +command -#channel -parameters * ! $+ $_qwall command to perform | _qhelp $_s2f(%cmd) }
  elseif (($_qwischan($2)) && (!$istok(RESET WHOIS,$1,32))) { %chan = $2 | %param = $3- }
  ; commands with parameters (no channel) or commands without parameters (AUTHHISTORY VERSION WHOAMI CHALLENGE)
  elseif ($istok(AUTO HELLO HELP SHOWCOMMANDS USERFLAGS EMAIL NEWPASS RESET REQUESTPASSWORD WHOIS AUTHHISTORY VERSION WHOAMI CHALLENGE CHALLENGEAUTH,$1,32)) { %param = $2- }
  elseif ($active ischan) { %chan = $active | %param = $2- }
  elseif ($2 == ?) { %chan = $_patch($_entry(-1,$null,Channel for $upper($1) command?)) | %param = $3- }
  elseif (($2 == *) && ($istok(OP VOICE INVITE,$1,32))) { msgqw %qw $upper($1) | halt }
  else { _error You must use $_qwcmd in a channel $+ $chr(40) $+ or specify a target channel $+ $chr(41) }

  ; no channel or param required
  ;/msg Q AUTHHISTORY|VERSION|WHOAMI|CHALLENGE
  ;https://www.quakenet.org/help/q-commands/authhistory
  ;https://www.quakenet.org/help/q-commands/version
  ;https://www.quakenet.org/help/q-commands/whoami
  ;https://www.quakenet.org/help/q-commands/challenge
  if ($istok(AUTHHISTORY VERSION WHOAMI CHALLENGE,$1,32)) { msgqw %qw $upper($1) }

  ; commands with parameters (no channel)
  elseif ($istok(AUTO HELLO HELP SHOWCOMMANDS USERFLAGS EMAIL NEWPASS RESET REQUESTPASSWORD WHOIS CHALLENGEAUTH,$1,32)) {
    %send = msgqw %qw $upper($1)
    goto $1

    :AUTO
    if ($gettok(%param,1,32) == VIEW) {
      var %nets = $readini($_cfg(pw.ini),n,qw,nets)
      if (%nets == $null) dispa No $_qwall auto-logins have been defined.
      else {
        _info $_qwcmd
        dispr @Info $_qwall logins $+ -
        :vloop1
        var %net = $gettok(%nets,1,32)
        var %param = $readini($_cfg(pw.ini),n,qw- $+ %net,qwaccount)
        var %item = $gettok(%param,1,32)
        %pw = $readini($_cfg(pw.ini),n,qw- $+ %net,%item)
        dispr @Info   - Login to $:t($gettok(%pw,1,32)) as $:s(%item) $chr(40) $+ on %net $+ $chr(41)
        %nets = $gettok(%nets,2-,32)
        if (%nets) goto vloop1
      }
    }
    elseif ($gettok(%param,1,32) == CLEAR) {
      var %nets = $readini($_cfg(pw.ini),n,qw,nets)
      if (%nets == $null) dispa Cannot delete entries as no $_qwall auto-logins have been defined.
      else { 
        :vloop2
        var %net = $gettok(%nets,1,32)
        remini $_cfg(pw.ini) qw- $+ %net
        %nets = $gettok(%nets,2-,32)
        if (%nets) goto vloop2
        remini $_cfg(pw.ini) qw
        dispa All $_qwall auto-logins have been deleted.
      }
    }
    elseif ($gettok(%param,1,32) == ADD) {
      if ($gettok(%param,2,32)) %who = $ifmatch
      else %who = $_entry(-1,$me,Username for auto-login? $+ $chr(40) $+ Enter the username you used to register. $+ $chr(41))
      if ($gettok(%param,3,32)) %pw = $ifmatch
      else {
        _ssplay Question
        %pw = $$input(Password for auto-login to %qw as %who $+ ?,2)
        if ($$input(Please retype password to confirm:,2) !=== %pw) _error Passwords do not match.You must enter the password exactly the same each time.
      }
      writeini $_cfg(pw.ini) qw- $+ $hget(pnp. $+ $cid,net) %who %qw $_pw.enc(%pw)
      dispa Auto-login to $:t(%qw) as $:s(%who) added. $chr(40) $+ on $hget(pnp. $+ $cid,net) $+ $chr(41)
      %old = $readini($_cfg(pw.ini),n,qw- $+ $hget(pnp. $+ $cid,net),qwaccount)
      writeini $_cfg(pw.ini) qw- $+ $hget(pnp. $+ $cid,net) qwaccount $addtok(%old,%who,32)
      %old = $readini($_cfg(pw.ini),n,qw,nets)
      writeini $_cfg(pw.ini) qw nets $addtok(%old,$hget(pnp. $+ $cid,net),32)
    }
    elseif ($gettok(%param,1,32) == DEL)  {
      if ($gettok(%param,2,32)) %who = $ifmatch
      else %who = $_entry(-1,$me,Username of auto-login to delete? $+ $chr(40) $+ Enter the username you used to register. $+ $chr(41))
      %pw = $readini($_cfg(pw.ini),n,qw- $+ $hget(pnp. $+ $cid,net),%who)
      if (%pw) {
        %old = $readini($_cfg(pw.ini),n,qw- $+ $hget(pnp. $+ $cid,net),qwaccount)
        %new = $remtok(%old,%who,1,32)
        if (%new == $null) {
          remini $_cfg(pw.ini) qw- $+ $hget(pnp. $+ $cid,net)
          %old = $readini($_cfg(pw.ini),n,qw,nets)
          %old = $remtok(%old,$hget(pnp. $+ $cid,net),1,32)
          if (%old == $null) remini $_cfg(pw.ini) qw
          else writeini $_cfg(pw.ini) qw nets %old
        }
        else writeini $_cfg(pw.ini) qw- $+ $hget(pnp. $+ $cid,net) qwaccount %new
        remini $_cfg(pw.ini) qw- $+ $hget(pnp. $+ $cid,net) %who
        dispa Auto-login for $:s(%who) deleted. $chr(40) $+ on $hget(pnp. $+ $cid,net) $+ $chr(41)
      }
      else dispa No auto-login has been defined for $:s(%who) $+ . $chr(40) $+ on $hget(pnp. $+ $cid,net) $+ $chr(41)
    }
    elseif ($gettok(%param,1,32) == LOGIN) {
      %who = $gettok(%param,2,32)
      if (!%who) {
        %who = $readini($_cfg(pw.ini),n,qw- $+ $hget(pnp. $+ $cid,net),qwaccount)
        %who = $gettok(%who,1,32)
        if (!%who) _error No $_qwall logins have been defined!You can add auto-logins through popups.
      }
      %pw = $readini($_cfg(pw.ini),n,qw- $+ $hget(pnp. $+ $cid,net),%who)
      if (%pw) { 
        %qw = $gettok(%pw,1,32) 
        %pw = $_pw.enc($gettok(%pw,2,32)) 
        .msgqw %qw AUTH %who %pw 
        dispa Logging into $:t(%qw) as $:s(%who) $+ ... 
      }
      else _error No $_qwall login defined for %who $+ .You can add an auto-login through popups.
    }
    return

    ;/msg Q HELLO <email@address.com> <email@address.com>
    ;https://www.quakenet.org/help/q-commands/hello
    :HELLO
    %param = $gettok(%param,1-2,32)
    if (%param) {
      if ($gettok(%param,1,32) === $gettok(%param,2,32)) %send %param
      else _error Invalid parameter!You must enter the email address exactly the same each time.
    }
    else {
      _ssplay Question
      %new = $_entry(-1,$null,Enter your email address:)
      if (%new !=== $_entry(-1,$null,Please retype your email address to confirm:) _error Email addresses do not match.You must enter your email address exactly the same each time.
      %send %new %new
    }
    return

    ;/msg Q HELP [<command>]
    ;https://www.quakenet.org/help/q-commands/help
    :HELP
    %param = $gettok(%param,1,32)
    if ((%param) && ($readini($script,n,qwcommands,%param))) %send %param
    elseif (%param) _error Entry not found!No help available for command: %param
    else %send
    return

    ;/msg Q SHOWCOMMANDS [<mask>]
    ;https://www.quakenet.org/help/q-commands/showcommands
    :SHOWCOMMANDS
    %param = $gettok(%param,1,32)
    if (%param) %send %param
    else %send
    return

    ;/msg Q USERFLAGS [+|-<flags>]
    ;https://www.quakenet.org/help/q-commands/userflags
    :USERFLAGS
    %param = $gettok(%param,1,32)
    if (%param) _qwisflags user %param | %send %param
    else %send
    return

    ;/msg Q@CServe.quakenet.org EMAIL <password> <email@address.com> <email@address.com>
    ;https://www.quakenet.org/help/q-commands/email
    :EMAIL
    %param = $gettok(%param,1-3,32)
    if (%param) {
      if ($gettok(%param,2,32) === $gettok(%param,3,32)) %send %param
      else _error Syntax error!Please type: $_qwcmd EMAIL <password> <email@address.com> <email@address.com>
    }
    else { 
      _ssplay Question
      %pw = $$input(Old %qw password?,2)
      %new = $_entry(-1,$null,New email address for %qw $+ ?)
      if (%new !=== $_entry(-1,$null,Please retype email address to confirm:)) _error Email addresses do not match.You must enter your email address exactly the same each time.
      %send %pw %new %new 

    }
    return

    ;/msg Q@CServe.quakenet.org NEWPASS <oldpassword> <newpassword> <newpassword>
    ;https://www.quakenet.org/help/q-commands/newpass
    :NEWPASS
    %param = $gettok(%param,1-3,32)
    if (%param) {
      if ($gettok(%param,2,32) === $gettok(%param,3,32)) %send %param
      else _error Syntax error!Please type: $_qwcmd NEWPASS <oldpassword> <newpassword> <newpassword>
    }
    else {
      _ssplay Question
      %pw = $$input(Old %qw password?,2)
      %new = $$input(New %qw password?,2)
      if (%new !=== $$input(Please retype password to confirm:,2)) _error Passwords do not match.You must enter the password exactly the same each time.
      %send %pw %new %new 
    } 
    return

    ;/msg Q RESET <username> <code>
    ;https://www.quakenet.org/help/q-commands/reset
    :RESET
    %param = $gettok(%param,1-2,32)
    if (%param) {
      if ($numtok(%param,32) == 2) %send %param
      else _error Syntax error!Please type: $_qwcmd RESET <username> <code>
    }
    else {
      _ssplay Question
      %who = $_entry(-1,$null,$_qwall username?)
      %pw = $_entry(-1,$null,$_qwall code?)
      %send %who %pw
    }
    return

    ;/msg Q REQUESTPASSWORD <email@address.com>
    ;https://www.quakenet.org/help/q-commands/requestpassword
    :REQUESTPASSWORD
    %param = $gettok(%param,1,32)
    if (%param) %send %param
    else { 
      _ssplay Question
      %new = $_entry(-1,$null,Email address to send password to?)
      %send %new
    }
    return

    ;/msg Q WHOIS <nick|#authname>
    ;https://www.quakenet.org/help/q-commands/whois
    :WHOIS
    %param = $gettok(%param,1,32)
    if (!%param) %param = $me
    if (!$hget(pnp. $+ $cid,-qwacc.whois)) {
      hadd -u2 pnp. $+ $cid -qwacc.whois 1
      %send %param
    }
    else dispa This command is rate limited.
    return

    ;/msg Q@CServe.quakenet.org CHALLENGEAUTH <username> <response> <algorithm>
    ;https://www.quakenet.org/help/q-commands/challengeauth
    ;https://www.quakenet.org/development/challengeauth
    :CHALLENGEAUTH

    return
  }

  ; commands with channel as required parameter
  elseif ($istok(ADDUSER AUTOLIMIT BANCLEAR BANDEL BANLIST BANTIMER CHANFLAGS CHANLEV CHANMODE CHANOPHISTORY CHANSTAT CLEARCHAN DEOPALL GIVEOWNER PERMBAN RECOVER REMOVEUSER REQUESTOWNER SETTOPIC TEMPBAN UNBANALL UNBANMASK UNBANME USERS WELCOME,$1,32)) { 
    %send = msgqw %qw $upper($1) %chan
    goto $1 

    ;/msg Q ADDUSER <#channel> [+<flags>] <nick1|#auth1> [<nick2|#auth2> [...]]
    ;https://www.quakenet.org/help/q-commands/adduser
    :ADDUSER
    if ($left($gettok(%param,1,32),1) == +) var %flags = $gettok(%param,1,32),%who = $gettok(%param,2-,32)
    else var %flags = +aot,%who = $gettok(%param,1-,32)

    if (%who) %send %flags %who
    else _error Invalid parameter!Please specify one or more usernames. 
    return

    ;/msg Q AUTOLIMIT <#channel> [<threshold>]
    ;https://www.quakenet.org/help/q-commands/autolimit
    :AUTOLIMIT
    %param = $gettok(%param,1,32)
    if (%param isnum) %send %param 
    else %send
    return  

    ;/msg Q BANCLEAR <#channel>
    ;https://www.quakenet.org/help/q-commands/banclear
    ;/msg Q BANLIST <#channel>
    ;https://www.quakenet.org/help/q-commands/banlist 
    ;/msg Q CHANOPHISTORY <#channel>
    ;https://www.quakenet.org/help/q-commands/chanophistory
    ;/msg Q CLEARCHAN <#channel>
    ;https://www.quakenet.org/help/q-commands/clearchan
    ;/msg Q DEOPALL <#channel>
    ;https://www.quakenet.org/help/q-commands/deopall
    ;/msg Q RECOVER <#channel>
    ;https://www.quakenet.org/help/q-commands/recover
    ;/msg Q REQUESTOWNER <#channel>
    ;https://www.quakenet.org/help/q-commands/requestowner
    ;/msg Q UNBANALL <#channel>
    ;https://www.quakenet.org/help/q-commands/unbanall
    ;/msg Q UNBANME <#channel>
    ;https://www.quakenet.org/help/q-commands/unbanme
    ;/msg Q USERS <#channel>
    ;https://www.quakenet.org/help/q-commands/users 
    :BANCLEAR | :BANLIST | :CHANOPHISTORY | :CLEARCHAN | :DEOPALL | :RECOVER |:REQUESTOWNER | :UNBANALL | :UNBANME | :USERS
    %send
    return  

    ;/msg Q BANDEL <#channel> <#num|banmask>
    ;https://www.quakenet.org/help/q-commands/bandel
    :BANDEL
    var %unbanmask = $gettok(%param,1,32)
    if (!%unbanmask) var %unbanmask = $_entry(-1,$null,Please enter a valid bannumber or banmask to unban. For example: *!*@*.be or #1)
    if (($_isaddr(%unbanmask)) || (($left(%unbanmask,1) == $chr(35)) && ($right(%unbanmask,-1) isnum))) %send %unbanmask
    else _error Invalid parameter! $+ %unbanmask is not a valid mask.
    return

    ;/msg Q BANTIMER <#channel> [<duration>]
    ;https://www.quakenet.org/help/q-commands/bantimer
    :BANTIMER
    %param = $gettok(%param,1,32)
    if ((%param == 0) || (($removecs(%param,m,h,d,w,M,y)) && ($v1 isnum))) %send %param
    else %send
    return  

    ;/msg Q CHANFLAGS <#channel> [+|-<flags>]
    ;https://www.quakenet.org/help/q-commands/chanflags
    :CHANFLAGS
    if (%param == edit) {
      editbox -ap $_qwcmd $upper($1) %chan
      dispa Specify one or more of the following channel flags: $:l(+|-abcefghjkptvw)
    }
    elseif (%param) {
      _qwisflags chan %param
      %send %param
    }
    else %send
    return  

    ;/msg Q CHANLEV <#channel> [<nick|#auth>] [edit|+|-<flags>]]
    ;https://www.quakenet.org/help/q-commands/chanlev
    :CHANLEV
    var %who = $gettok(%param,1,32), %flags = $gettok(%param,2,32)
    if ((%who) && (!%flags)) {
      if (%who == $me) hadd pnp. $+ $cid $+(-qwacc.chanlev.,%chan,.,%who) 2
      else hadd pnp. $+ $cid $+(-qwacc.chanlev.,%chan,.,%who) 1
      %send %who 
    }
    elseif ((%who) && (%flags)) { 
      if (%flags == edit) {
        if (%who == $me) {
          editbox -ap $_qwcmd $upper($1) %chan %who
          dispa Specify one or more of the following chanlev flags: $:l(+|-abdgjkmnoptvw)
        }
        else {
          editbox -ap $_qwcmd $upper($1) %chan %who
          dispa Specify one or more of the following chanlev flags: $:l(+|-abdgkmnoptv)
        }
      }
      else {
        _qwisflags chanlev %flags 
        %send %who %flags
      }
    }
    else %send
    return  

    ;/msg Q CHANMODE <#channel> [<modes>|none|edit]
    ;https://www.quakenet.org/help/q-commands/chanmode 
    :CHANMODE
    if (%param == none) %send none
    elseif (%param == edit) {
      editbox -ap $_qwcmd $upper($1) %chan
      dispa Specify one or more of the following channel modes to enforce or forbid: $:l(+|-bcCdDiklmMnNoprstTuv)
    }
    elseif (%param) {
      _qwischanmode %param 
      %send %param
    }
    else %send
    return  

    ;/msg Q CHANSTAT <#channel> [RESET]
    ;https://www.quakenet.org/help/q-commands/chanstat
    :CHANSTAT
    if (%param === RESET) %send %param
    else %send
    return    

    ;/msg Q GIVEOWNER <#channel> <nick|#authname> [<code>]
    ;https://www.quakenet.org/help/q-commands/giveowner
    :GIVEOWNER
    if ($numtok(%param,32) == 2) %send $gettok(%param,1,32) $gettok(%param,2,32)
    elseif ($numtok(%param,32) == 1) %send $gettok(%param,1,32) | editbox -ap $_qwcmd $upper($1) %chan
    else _error Invalid syntax for this command!!Parameters are missing!
    return  

    ;/msg Q PERMBAN <#channel> <banmask> [<reason>]
    ;https://www.quakenet.org/help/q-commands/permban 
    :PERMBAN
    if ($numtok(%param,32) > 1) var %banmask = $gettok(%param,1,32),%reason = $gettok(%param,2-,32)
    elseif ($numtok(%param,32) == 1) var %reason = $_entry(2,$null,Reason for PERM ban:),%banmask = $gettok(%param,1,32)
    else var %banmask = $_entry(-1,$null,Please enter a valid banmask. For example: *!*@*.be),%reason = $_entry(2,$null,Reason for ban:)
    if (!%reason) %reason = Banned.
    if ($_isaddr(%banmask)) %send %banmask %reason
    else _error Invalid parameter!Please enter a valid banmask.      
    return  

    ;/msg Q REMOVEUSER <#channel> <nick1|#auth1> [<nick2|#auth2> [...]]
    ;https://www.quakenet.org/help/q-commands/removeuser 
    :REMOVEUSER
    if (%param) %who = $_nccs(32,%chan,$_c2s(%param))
    else %who = $_c2s($_entry(0,$null,User $+ $chr(40) $+ s $+ $chr(41) to remove? $+ $chr(40) $+ You may specify multiple users $+ $chr(41)))
    %send %who
    return   

    ;/msg Q SETTOPIC <#channel> [<topic>]
    ;https://www.quakenet.org/help/q-commands/settopic 
    :SETTOPIC 
    if (%param == ?) var %settopic = $_entry(0,$null,Set the topic to:)
    elseif (%param) var %settopic = %param
    if (%settopic) { %send %settopic }
    else { %send }
    return  

    ;/msg Q TEMPBAN <#channel> <banmask> <duration> [<reason>]
    ;https://www.quakenet.org/help/q-commands/tempban 
    :TEMPBAN
    if ($numtok(%param,32) > 2) var %banmask = $gettok(%param,1,32),%duration = $gettok(%param,2,32),%reason = $gettok(%param,3-,32)
    elseif ($numtok(%param,32) == 2) var %reason = $_entry(2,$null,Reason for TEMP ban:),%banmask = $gettok(%param,1,32),%duration = $gettok(%param,2,32)
    elseif ($numtok(%param,32) == 1) var %duration = $_entry(-1,$null,Please enter duration for the ban. For example: 1h30m 3d 1M 1y2w),%reason = $_entry(2,$null,Reason for TEMP ban:),%banmask = $gettok(%param,1,32)
    else var %banmask = $_entry(-1,$null,Please enter a valid banmask. For example: *!*@*.be),%duration = $_entry(-1,$null,Please enter duration for the ban. For example: 1h30m 3d 1M 1y2w),%reason = $_entry(2,$null,Reason for TEMP ban:)

    if (!%reason) %reason = Banned.
    if ($_isaddr(%banmask)) %send %banmask %duration %reason
    else _error Invalid parameter!Please enter a valid banmask.
    return

    ;/msg Q UNBANMASK <#channel> <mask>
    ;https://www.quakenet.org/help/q-commands/unbanmask 
    :UNBANMASK
    var %unbanmask = $gettok(%param,1,32)
    if (!%unbanmask) var %unbanmask = $_entry(-1,$null,Please enter a valid banmask to unban. For example: *!*@*.be)
    if ($_isaddr(%unbanmask)) %send %unbanmask
    else _error Invalid parameter! $+ %unbanmask is not a valid mask.
    return   

    ;/msg Q WELCOME <#channel> [<message>]
    https://www.quakenet.org/help/q-commands/welcome 
    :WELCOME
    if (%param) %send %param
    else %send
    return
  }
  ; channel may not be required, but that is dealt with at the start, for example: '/qw INVITE *' runs /msgqw %qw INVTE
  ; channel param is filled now:
  elseif ($istok(INVITE OP VOICE,$1,32)) {
    %send = msgqw %qw $upper($1) %chan
    goto $1
    ;/msg Q INVITE [<#channel>]
    ;https://www.quakenet.org/help/q-commands/invite
    ;/msg Q OP [<#channel> [<nick1> [<nick2> [...]]]]
    ;https://www.quakenet.org/help/q-commands/op
    ;/msg Q VOICE [<#channel> [<nick1> [<nick2> [...]]]]
    ;https://www.quakenet.org/help/q-commands/voice
    :INVITE 
    %send
    return

    :OP | :VOICE
    if (%param) %who = $_nccs(32,%chan,$_c2s(%param))
    else %who = $_c2s($_entry(0,$me,$iif($1 == OP,User $+ $chr(40) $+ s $+ $chr(41) to op? $+ $chr(40) $+ You may specify multiple users $+ $chr(41),User $+ $chr(40) $+ s $+ $chr(41) to voice? $+ $chr(40) $+ You may specify multiple users $+ $chr(41))))
    %send %who
    return
  }

}

; /msgqw bot full command
alias msgqw {
  _linedance . $+ $_botacc($1) $2-
  if ($2 == NEWPASS) {
    dispr $iif($3 ischan,$3,-ai2) Using $:t($upper($1)) for command: $:h(NEWPASS ????? ????? ?????)
  }
  else dispr $iif($3 ischan,$3,-ai2) Using $:t($upper($1)) for command: $:h($2-)
}
on ^*:TEXT:*:?:qwparse $1-
on ^*:NOTICE:*:?:qwparse $1-
alias -l qwparse {
  if (!$_isbot($nick)) return
  var %text $1-

  if ($regex(%text,(\w+) version (\d+\.\d+) \(Compiled on (\w+ \d \d+)\) \(C\) \d+-\d+ ([^.]+)\.)) {
    set -u1 %:qw.bver $regml(1) 
    set -u1 %:qw.ver $regml(2)
    set -u1 %:qw.compiled $regml(3)
    set -u1 %:qw.authors $regml(4)
    halt
  }
  elseif ($regex(%text,Built on (\w+)\. \(C\) \d+-\d+ ([^.]+)\.)) {
    set -u1 %:qw.builton $regml(1) 
    dispa $:t(%:qw.bver) version $:t(%:qw.ver) - Compiled on $:t(%:qw.compiled) - Built on $:t(%:qw.builton) - Built by: $:t(%:qw.authors)
    halt
  }
  elseif ($regex(%text,Current forced modes on (\#.+): (.+))) {
    dispa Current forced modes on $:t($regml(1)) $+ : $:t($regml(2))
    halt
  }
  elseif ($regex(%text,Flags for (\w+) on (\#.+): (.+))) {
    var %who = $regml(1), %chan = $regml(2), %flags = $regml(3), %goto $hget(pnp. $+ $cid,$+(-qwacc.chanlev.,%chan,.,%who))
    if ($istok(1 2,%goto,32)) goto %goto
    else return

    :2
    hdel pnp. $+ $cid $+(-qwacc.chanlev.,%chan,.,%who)
    qwa %chan %flags
    halt

    :1
    hdel pnp. $+ $cid $+(-qwacc.chanlev.,%chan,.,%who)
    dispa $:l(Q) flags for $:l( %who ) on $:l( %chan ) are: $:l( %flags )
    halt
  }
  elseif ($regex(%text,User (.+) is not authed\.)) {
    hdel -w pnp. $+ $cid -qwacc.chanlev.*
    halt
  }
  elseif ($regex(%text,You do not have sufficient access on (\#.+) to use (\w+)\.)) {
    hdel -w pnp. $+ $cid -qwacc. $+ $regml(2) + .* 
    dispa Insufficient access on $regml(1) to use $regml(2)
    if (($regml(2) == CHANLEV) && ($readini($_cfg(pw.ini),n,qw- $+ $hget(pnp. $+ $cid,net),a $+ $regml(1)) != $null)) remini $_cfg(pw.ini) qw- $+ $hget(pnp. $+ $cid,net) a $+ $regml(1)
    halt
  }
  elseif ($regex(%text,You are now logged in as (.+)\.)) {
    .qw WHOAMI
    halt 
  }
  elseif ($regex(%text,Done. Flags for (.+) on (\#.+) are now: (\+.+)\.)) {
    var %chan $regml(2), %flags $regml(3)
    qwa %chan %flags
    halt
  }
  elseif ($regex(%text,Done\. User (.+) is no longer known on (\#.+)\.)) {
    var %chan $regml(2), %who $regml(1)
    hdel pnp. $+ $cid -qwacc. $+ %chan  
    remini $_cfg(pw.ini) qw- $+ $hget(pnp. $+ $cid,net) a $+ %chan
    halt
  }
  ;elseif ($regex(%text,[PLACEHOLDER FOR WHEN YOU HAVE SUCCEEDED IN CHANGING YOUR PASSWORD])) {
  ;  var %from = $hget(pnp. $+ $cid,-qwacc.username)
  ;  var %pw = $readini($_cfg(pw.ini),n,qw- $+ $hget(pnp. $+ $cid,net),%from)
  ;  if (%pw) writeini $_cfg(pw.ini) qw- $+ $hget(pnp. $+ $cid,net) %from $gettok(%pw,1,32) $_pw.enc($gettok($1-,-1,32))
  ;}
  elseif ($regex(%text,(Remember: .+))) {
    dispa $regml(1)
    halt
  }
  elseif ($regex(%text,(AUTH is not available once you have authed.))) {
    .qw WHOAMI
    halt
  }
  elseif ($regex(%text,User flags for (.+): (\+[cn]))) {
    hadd pnp. $+ $cid -qwacc.userflags $regml(2)
    dispa Updated userflags (on $hget(pnp. $+ $cid,net) $+ )
    halt
  }
  elseif ($regex(%text,-Information for user (.+) \(using account (.+)\):)) {
    if ($regml(1) == $me) {
      set -u1 %:qw.whoami 1 
      hadd pnp. $+ $cid -qwacc.username $regml(2) 
    }
    else dispa Information for user $regml(1) (using account $regml(2) $+ )
    halt
  }
  elseif ($regex(%text,User ID : (\d+))) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
      hadd pnp. $+ $cid -qwacc.userid $regml(1)
    }
    halt
  }
  elseif ($regex(%text,User flags : (\+[cn]))) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
      hadd pnp. $+ $cid -qwacc.userflags $regml(1)
    }
    halt
  }
  elseif ($regex(%text,Account users : (.+))) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
      hadd pnp. $+ $cid -qwacc.users $regml(1)
    }
    else dispa Account users : $:t($regml(1))

    halt
  }
  elseif ($regex(%text,User created : (.+))) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
      hadd pnp. $+ $cid -qwacc.usercreated $regml(1)
    }
    else dispa User created : $:t($regml(1))
    halt
  }
  elseif ($regex(%text,Last auth : (.+))) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
      hadd pnp. $+ $cid -qwacc.lastauth $regml(1)
    }
    else dispa Last auth : $:t($regml(1))
    halt
  }
  elseif ($regex(%text,Last user@host : (.+))) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
      hadd pnp. $+ $cid -qwacc.lastuserhost $regml(1)
    }
    halt
  }   
  elseif ($regex(%text,Email address : (.+))) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
      hadd pnp. $+ $cid -qwacc.emailaddress $regml(1)
    }
    halt
  }  
  elseif ($regex(%text,Email last set : (.+))) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
      hadd pnp. $+ $cid -qwacc.emaillastset $regml(1)
    }
    halt
  }
  elseif ($regex(%text,Pass last set : (.+))) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
      hadd pnp. $+ $cid -qwacc.passlastset $regml(1)
    }
    halt
  }
  elseif ($regex(%text,Last auth : (.+))) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
      hadd pnp. $+ $cid -qwacc.lastauth $regml(1)
    }
    halt
  }
  elseif ($regex(%text,Known on the following channels:)) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
    }
    halt
  }
  elseif ($regex(%text,Channel Flags)) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
    }
    halt
  }
  elseif ($regex(%text,(.+)\s(\+.+))) {
    if (%:qw.whoami) {
      set -u1 %:qw.whoami 1 
      if ($_qwischan($regml(1))) hadd pnp. $+ $cid -qwacc. $+ $regml(1) $regml(2)
    }
    halt
  }
  elseif ($regex(%text,End of list\.)) {
    if (%:qw.whoami) {
      unset %:qw.whoami
      dispa WHOAMI has been updated (on $hget(pnp. $+ $cid,net) $+ )
    }
    halt
  }
  elseif ($regex(%text,(Nothing changed\. Your requested flag combination change was either the same as the existing flags, impossible, or you don't have enough access\.))) {
    dispa $regml(1)
    halt
  }
  elseif ($regex(%text,(.+) is already (voiced|opped) on (\#.+)\.)) {
    dispa User $:t($regml(1)) is already $regml(2) on $:t($regml(3)) $+ !
    halt
  }
  elseif ($regex(%text,Done\.)) halt

  ; else halt
}
on me:*:JOIN:#:if (($_isserv(qw)) && ($hget(pnp. $+ $cid,-qwacc.username)) && ($hget(pnp. $+ $cid,-qwacc. $+ $chan))) .qw CHANLEV $chan $hget(pnp. $+ $cid,-qwacc.username)

alias -l qwpop {
  unset %.qw*
  if ($_isserv(qw)) {
    set -u1 %.qwaccessstored $readini($_cfg(pw.ini),n,qw- $+ $hget(pnp. $+ $cid,net),a $+ $active)

    if ($_chanbot($active)) { set -u1 %.qw $ifmatch }

    set -u1 %.qwlogin $iif($readini($_cfg(pw.ini),n,qw- $+ $hget(pnp. $+ $cid,net),$active),1,0)
    return $_popssep
  }
}
alias -l _qwloginpop {
  unset %.qwlogin.*
  var %who = $readini($_cfg(pw.ini),n,qw- $+ $hget(pnp. $+ $cid,net),qwaccount)
  var %pos = 1
  var %popup = 1
  :loop
  var %un = $gettok(%who,%pos,32)
  if (%un) {
    if (!$_qwischan(%un)) { set -u1 %.qwlogin. [ $+ [ %popup ] ] Login as %un | inc %popup }
    inc %pos
    goto loop
  }

  if ($_qwall) return $_popssep
}
alias -l qwloginas {
  var %who = $readini($_cfg(pw.ini),n,qw- $+ $hget(pnp. $+ $cid,net),qwaccount)
  var %pos = 1
  var %popup = 1
  :loop
  var %un = $gettok(%who,%pos,32)
  if (%un) {
    if (!$_qwischan(%un)) { if (%popup == $1) return %un | inc %popup }
    inc %pos
    goto loop
  }
  return
}
alias _qwrequest {
  if ($istok(begin end,$1,32)) return -
  if ($me isop $chan($1)) return $iif($_qwall isop $chan($1),$style(2)) Request $_qwall for $replace($chan($1),&,&&) : msg R REQUESTBOT $chan($1)
}
menu status {
  $_qwloginpop
  $_qwall
  .$iif(!$hget(pnp. $+ $cid,-qwacc.username),Register an account):qw HELLO
  .-
  .Request Q
  ..$submenu($_qwrequest($1))
  .-
  .Login
  ..$iif($hget(pnp. $+ $cid,-qwacc.username),$style(3)) %.qwlogin.1 : qw AUTO LOGIN $qwloginas(1)
  ..-
  ..$iif($hget(pnp. $+ $cid,-qwacc.username),$style(2)) Add auto-login:qw AUTO ADD
  ..$iif(!$hget(pnp. $+ $cid,-qwacc.username),$style(2)) Delete auto-login:qw AUTO DEL
  ..-
  ..View all auto-logins:qw AUTO VIEW
  ..Clear all auto-logins:_okcancel 1 Delete ALL $_qwall auto-logins? | qw AUTO CLEAR
  ..-
  ..$iif($hget(pnp. $+ $cid,-qwacc.username),Change password):qw NEWPASS
  ..$iif($hget(pnp. $+ $cid,-qwacc.username),Change email):qw EMAIL
  ..-
  ..$iif($hget(pnp. $+ $cid,-qwacc.username),Auth history):qw AUTHHISTORY
  .-
  .$iif($hget(pnp. $+ $cid,-qwacc.username),Recovery)
  ..Unban yourself (?) $+ $chr(9) $+ [+o/+m]:qw UNBANME ?
  ..-
  ..Invite yourself (?) $+ $chr(9) $+ [+k]: qw INVITE ? 
  ..Invite yourself (All) $+ $chr(9) $+ [+k]: qw INVITE *
  ..-
  ..Clear channel (?) $+ $chr(9) $+ [+m]:qw CLEARCHAN ?
  ..Recover channel (?) $+ $chr(9) $+ [+m]:qw RECOVER ?
  .$iif($hget(pnp. $+ $cid,-qwacc.username),Commands)
  ..Ban (temp) (?) $+ $chr(9) $+ [+m]:qw TEMPBAN ?
  ..Ban (perm) (?) $+ $chr(9) $+ [+m]:qw PERMBAN ?
  ..Unban (?) $+ $chr(9) $+ [+o/+m]:qw BANDEL ?
  ..-
  ..Op (?) $+ $chr(9) $+ [+o]:qw OP ?
  ..Op (All) $+ $chr(9) $+ [+o]:qw OP *
  ..-
  ..De-Op all users (?) $+ $chr(9) $+ [+m]:qw DEOPALL ?
  ..-
  ..Voice (?) $+ $chr(9) $+ [+v]:qw VOICE ?
  ..Voice (All) $+ $chr(9) $+ [+v]:qw VOICE *
  .-
  .$iif($hget(pnp. $+ $cid,-qwacc.username),Info)
  ..Op history (?) $+ $chr(9) $+ [+o]:qw CHANOPHISTORY ?
  ..Statistics (?) $+ $chr(9) $+ [+m]:qw CHANSTAT ?
  ..-
  ..My userflags:qw USERFLAGS
  ..Who am I: qw WHOAMI
  .-
  .Reset:qw RESET
  .-
  .Q version:qw VERSION
}
menu nicklist {
  $qwpop
  %.qw
  .$iif((($hget(pnp. $+ $cid,-qwacc.username)) && ($_qwchanlev(#,m))),Add user (+aot) $+ $chr(9) $+ [+m]):qw ADDUSER # $$snicks
  .$iif((($hget(pnp. $+ $cid,-qwacc.username)) && ($_qwchanlev(#,m))),Add user (+gv) $+ $chr(9) $+ [+m]):qw ADDUSER # +gv $$snicks  
  .$iif((($hget(pnp. $+ $cid,-qwacc.username)) && ($_qwchanlev(#,m))),Remove user):qw REMOVEUSER # $$snicks
  .-
  .$iif((($hget(pnp. $+ $cid,-qwacc.username)) && ($snick(#,$snick(#,0)) !isop #) && ($_qwchanlev(#,o))),Op $+ $chr(9) $+ [+o]):qw OP # $$snicks
  .$iif((($hget(pnp. $+ $cid,-qwacc.username)) && ($snick(#,$snick(#,0)) isreg #) && ($_qwchanlev(#,v))),Voice $+ $chr(9) $+ [+v]):qw VOICE # $$snicks
  .-
  .$iif((($hget(pnp. $+ $cid,-qwacc.username)) && (($_qwchanlev(#,k))) || ($_qwchanlev(#,o))),Chanlev)
  ..$iif((($_qwchanlev(#,k)) || ($_qwchanlev(#,o))),View $+ $chr(9) $+ [+k/+o]):qw CHANLEV # $$1
  ..$iif($_qwchanlev(#,m),Editbox $+ $chr(9) $+ [+m]):qw CHANLEV # $$1 edit
  ..-
  ..$iif($1 == $me,AUTO-INVITE $+ $chr(9) $+ [+j]):qw CHANLEV # $1 +j
  ..$iif($1 == $me,$+ $chr(9) $+ [-j]):qw CHANLEV # $1 -j
  ..-
  ..$iif($1 == $me,HIDEWELCOME $+ $chr(9) $+ [+w]):qw HIDEWELCOME # $1 +w
  ..$iif($1 == $me,$+ $chr(9) $+ [-w]):qw HIDEWELCOME # $1 -w
  .-
  .$iif((($hget(pnp. $+ $cid,-qwacc.username)) && ($_qwchanlev(#,n))),Give ownership $+ $chr(9) $+ [+n]):qw GIVEOWNER # $$1
  .-
  .$iif($hget(pnp. $+ $cid,-qwacc.username),Whois):qw WHOIS $$1
}
menu channel {
  $qwpop
  %.qw
  .$iif((($hget(pnp. $+ $cid,-qwacc.username)) && ($_qwchanlev(#,m))),Topic)
  ..Edit $+ $chr(9) $+ [m]:qw SETTOPIC # ?
  ..Restore $+ $chr(9) $+ [m]:qw SETTOPIC #
  .$iif((($hget(pnp. $+ $cid,-qwacc.username)) && ($_qwchanlev(#,o))),Modes)
  ..$iif($_qwchanlev(#,o),View $+ $chr(9) $+ [+o]):qw CHANMODE #
  ..$iif($_qwchanlev(#,m),Editbox $+ $chr(9) $+ [+m]):qw CHANMODE # edit
  ..-
  ..$iif($_qwchanlev(#,m),Set $+ $chr(9) $+ [+m])
  ...$iif($_qwchanlev(#,m),Set default $+ $chr(9) $+ [+ntCN]):qw CHANMODE # +ntCN 
  ...-
  ...$iif($_qwchanlev(#,m),Clear all $+ $chr(9) $+ [none]):qw CHANMODE # none
  ..-
  ..Webpage CHANMODES: http https://www.quakenet.org/help/general/what-channel-modes-are-available-on-quakenet
  .$iif((($hget(pnp. $+ $cid,-qwacc.username)) && ($_qwchanlev(#,o))),Flags)
  ..$iif($_qwchanlev(#,o),View $+ $chr(9) $+ [o]):qw CHANFLAGS #
  ..$iif($_qwchanlev(#,m),Editbox $+ $chr(9) $+ [m]):qw CHANFLAGS # edit
  ..-
  ..$iif($_qwchanlev(#,m),Set $+ $chr(9) $+ [m])
  ...AUTO-OP $+ $chr(9) $+ [+a]:qw CHANFLAGS # +a
  ...$+ $chr(9) $+ [-a]:qw CHANFLAGS # -a
  ...-
  ...BITCH $+ $chr(9) $+ [+b]:qw CHANFLAGS # +b
  ...$+ $chr(9) $+ [-b]:qw CHANFLAGS # -b
  ...-
  ...AUTO-LIMIT $+ $chr(9) $+ [+c]:qw CHANFLAGS # +c
  ...$+ $chr(9) $+ [-c]:qw CHANFLAGS # -c
  ...-
  ...ENFORCE BANS $+ $chr(9) $+ [+e]:qw CHANFLAGS # +e
  ...$+ $chr(9) $+ [-e]:qw CHANFLAGS # -e
  ...-
  ...FORCE TOPIC $+ $chr(9) $+ [+f]:qw CHANFLAGS # +f
  ...$+ $chr(9) $+ [-f]:qw CHANFLAGS # -f
  ...-
  ...AUTO-VOICE $+ $chr(9) $+ [+g]:qw CHANFLAGS # +g
  ...$+ $chr(9) $+ [-g]:qw CHANFLAGS # -g
  ...-
  ...ACHIEVEMENTS $+ $chr(9) $+ [+h]:qw CHANFLAGS # +h
  ...$+ $chr(9) $+ [-h]:qw CHANFLAGS # -h
  ...-
  ...JOINED $+ $chr(9) $+ [+j]:qw CHANFLAGS # +j
  ...$+ $chr(9) $+ [-j]:qw CHANFLAGS # -j
  ...-
  ...KNOWN ONLY $+ $chr(9) $+ [+k]:qw CHANFLAGS # +k
  ...$+ $chr(9) $+ [-k]:qw CHANFLAGS # -k
  ...-
  ...PROTECT $+ $chr(9) $+ [+p]:qw CHANFLAGS # +p
  ...$+ $chr(9) $+ [-p]:qw CHANFLAGS # -p
  ...-
  ...TOPIC SAVE $+ $chr(9) $+ [+t]:qw CHANFLAGS # +t
  ...$+ $chr(9) $+ [-t]:qw CHANFLAGS # -t
  ...-
  ...VOICEALL $+ $chr(9) $+ [+v]:qw CHANFLAGS # +v
  ...$+ $chr(9) $+ [-v]:qw CHANFLAGS # -v
  ...-
  ...WELCOME $+ $chr(9) $+ [+w]:qw CHANFLAGS # +w
  ...$+ $chr(9) $+ [-w]:qw CHANFLAGS # -w
  ..-
  ..Webpage CHANFLAGS:http https://www.quakenet.org/help/q-commands/chanflags
  .-
  .$iif((($hget(pnp. $+ $cid,-qwacc.username)) && ($_qwchanlev(#,v))),Commands)
  ..$iif($_qwchanlev(#,m),Ban (temp) $+ $chr(9) $+ [+m]):qw TEMPBAN #
  ..$iif($_qwchanlev(#,m),Ban (perm) $+ $chr(9) $+ [+m]):qw PERMBAN #
  ..$iif($_qwchanlev(#,o),Unban $+ $chr(9) $+ [+o/+m]):qw BANDEL #
  ..-
  ..$iif($_qwchanlev(#,o),Op $+ $chr(9) $+ [+o]):qw OP #
  ..-
  ..$iif($_qwchanlev(#,m),De-Op all users $+ $chr(9) $+ [+m]):qw DEOPALL #
  ..-
  ..$iif($_qwchanlev(#,v),Voice $+ $chr(9) $+ [+v]):qw VOICE #
  .-
  .$iif(($hget(pnp. $+ $cid,-qwacc.username) && ($_qwchanlev(#,o))),Info)
  ..$iif($_qwchanlev(#,o),Op history $+ $chr(9) $+ [+o]):qw CHANOPHISTORY #
  ..$iif($_qwchanlev(#,m),Statistics $+ $chr(9) $+ [+m])
  ...View:qw CHANSTAT #
  ...-
  ...Reset:qw CHANSTAT # RESET
  .-
  .$iif($_qwchanlev(#,o),Welcome message)
  ..$iif($_qwchanlev(#,o),View $+ $chr(9) $+ [+o]):qw WELCOME #
  ..$iif($_qwchanlev(#,m),Edit $+ $chr(9) $+ [+m]):qw WELCOME # $_entry(0,$null,Enter your welcome message for #) 
}
; $_qwchanlev(%yourchanlevels,%requiredlevel)
; tests required %level against levels stored for %chan
alias -l _qwchanlev {
  var %chanlev = $hget(pnp. $+ $cid,-qwacc. $+ $1)
  if (!%chanlev) return 0
  if (n isincs %chanlev) return 1
  if ($istok(k v o m,$2,32)) {
    goto $2
    :k
    if (k isincs %chanlev) return 1
    else return 0
    :v
    if ((n isincs %chanlev) || (m isincs %chanlev) || (o isincs %chanlev) || (v isincs %chanlev)) return 1
    else return 0
    :o
    if ((n isincs %chanlev) || (m isincs %chanlev) || (o isincs %chanlev)) return 1
    else return 0
    :m
    if ((n isincs %chanlev) || (m isincs %chanlev)) return 1
    else return 0
  }
}
; /qwa [#chan] [+|-flags]
; view or set qw access
alias qwa {
  if ($server == $null) _error You must be connected to use that command
  if ($_isserv(qw) == $false) _error You cannot use /qwa on this network. $+ /qwa only works on networks with Q. (QuakeNet)
  if ($_qwischan($1)) var %chan = $1,%how = $2
  elseif ($active ischan) var %chan = $active,%how = $1
  else _error You must use /qwa in a channel $+ $chr(40) $+ or specify a target channel $+ $chr(41)
  if (%how == $null) {
    %how = $readini($_cfg(pw.ini),n,qw- $+ $hget(pnp. $+ $cid,net),a $+ %chan)
  }
  else {
    if (%how) writeini $_cfg(pw.ini) qw- $+ $hget(pnp. $+ $cid,net) a $+ %chan %how
    else remini $_cfg(pw.ini) qw- $+ $hget(pnp. $+ $cid,net) a $+ %chan
    if (($hget(pnp. $+ $cid,-qwacc. $+ %chan) != $null) || ($hget(pnp. $+ $cid,-qwacc.username))) hadd pnp. $+ $cid -qwacc. $+ %chan %how
  }
  dispa You have set yourself as access level $:t(%how) on $:t(%chan)
}
; loads all qw.chan vars from ini
alias -l _loadqwa {
  hdel -w pnp. $+ $cid -qwacc.#*
  var %ini = $_cfg(pw.ini)
  var %ln = $read(%ini,s,$+($chr(91),qw-,$hget(pnp. $+ $cid,net),$chr(93)))
  if ($readn) {
    %ln = $readn + 1
    :loop
    var %get = $read(%ini,n,%ln)
    if (([* !iswm %get) && (%get)) {
      if ((a* iswm %get) && ($_qwischan($right($gettok(%get,1,61),-1)))) hadd pnp. $+ $cid -qwacc. $+ $right($gettok(%get,1,61),-1) $gettok(%get,2,61)
      inc %ln
      goto loop
    }
  }
}
alias -l _qwischan if ($left($1,1) isin $chantypes) return 1 | return 0 
alias -l _qwisflag if ($left($1,1) isin +-) return 1 | return 0
; _qwisflags <user|chan|chanlev> <param>
alias -l _qwisflags {
  if (($0 != 2) && (($1 != chanlev) || ($1 != user) || ($1 != chan))) _error Invalid syntax for this command!!Parameters are missing!
  if ($1 == user) var %allflags c,n
  elseif ($1 == chan) var %allflags a,b,c,e,f,g,h,j,k,p,t,v,w
  elseif ($1 == chanlev) var %allflags a,b,d,g,j,k,m,n,o,p,q,t,v,w
  else _error Invalid syntax for this command!Has to be 'user', 'chan' or 'chanlev'. You typed: ' $+ $1 $+ '
  var %flags $2, %check $replace(%flags,-,$chr(32),+,$chr(32))
  if (!$_qwisflag(%flags)) _error Invalid parameter!Does not start with plus '+' or minus '-' symbol.
  elseif (%check !islower) _error Invalid parameter!Does not contain lower case letter(s).
  elseif ((+ isin %flags) && (- isin %flags) && ($numtok(%check,32) != 2)) _error Invalid parameter!Plus and minus sign conjoined?
  elseif (($removecs(%check,c,n,$chr(32)) != $null) && ($1 == user)) _error Invalid parameter!Flag(s) not supported. Supported are: $remove(%allflags,$chr(44))
  elseif (($removecs(%check,a,b,c,e,f,g,h,j,k,p,t,v,w,$chr(32)) != $null) && ($1 == chan)) _error Invalid parameter!Flag(s) not supported. Supported are: $remove(%allflags,$chr(44))
  elseif (($removecs(%check,a,b,d,g,j,k,m,n,o,p,q,t,v,w,$chr(32)) != $null) && ($1 == chanlev)) _error Invalid parameter!Flag(s) not supported. Supported are: $remove(%allflags,$chr(44))
  else {
    var %x 1
    while ($gettok(%allflags,%x,44)) {
      var %char = $ifmatch
      if ($poscs(%flags,%char,0) > 1) { _error Invalid parameter!More than one instance of letter ' $+ %char $+ ' found! }
      inc %x
    }
  }
  return
}
alias -l _qwischanmode {
  var %flags $1, %check $replace(%flags,-,$chr(32),+,$chr(32)), %allflags b,c,C,d,D,i,k,l,m,M,n,N,o,p,r,s,t,T,u,v
  if (!%flags) _error Invalid syntax for this command!Parameter is missing!
  if (!$_qwisflag(%flags)) _error Invalid parameter!Does not start with plus '+' or minus '-' symbol.
  elseif ((+ isin %flags) && (- isin %flags) && ($numtok(%check,32) != 2)) _error Invalid parameter!Plus and minus sign conjoined?
  elseif ($removecs(%check,b,c,C,d,D,i,k,l,m,M,n,N,o,p,r,s,r,t,T,u,V,$chr(32)) != $null) _error Invalid parameter!Flag(s) not supported. Supported are: $remove(%allflags,$chr(44))
  else {
    var %x 1
    while ($gettok(%allflags,%x,44)) {
      var %char = $ifmatch
      if ($poscs(%flags,%char,0) > 1) { _error Invalid parameter!More than one instance of letter ' $+ %char $+ ' found! }
      inc %x
    }
  }
  return
}
on *:SIGNAL:PNP.SIGNON:_qw.connect
alias -l _qw.connect if ($_isserv(qw)) .qw AUTO LOGIN
