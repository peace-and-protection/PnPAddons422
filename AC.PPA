; #= ppac -rs
; ########################################
; Peace and Protection
; PnP Alias Central (dev addon)
; ########################################

; Indexes PnP aliases in $script(0) and $alias(0)
; Copyright (C) 2022  Sven Roelse
; 
; 
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
; 
; 
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; 
; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <https://www.gnu.org/licenses/>.

#.ppa.info off
[addon]
name=Alias Central
group=Dev
popup=Alias Central
author=acvxqs
version=1.2
url=
email=
id=ppac
ppver=4.22
unload=ppac.unload
[files]
1=ac.ppa
[notes]
1=This addon adds the ability to index PnP aliases in $script(0) and $alias(0)
[menu]
1=Show:{ ppac }
#.ppa.info end

on *:LOAD:{
  ; PnP check
  if (!$_ispnp) {
    echo 4 -ati2 *** This addon requires Peace and Protection by pai to use.
    echo 4 -ati2 *** You can download Peace and Protection at https://pnp.kristshell.net/
    .timer -mio 1 0 .unload -rs " $+ $script $+ "
    halt
  }
  ; Invalid load method check
  if (!$istok($_cfgx(addons,ids),$readini($script,n,addon,id),32)) {
    .timer -mio 1 0 .unload -rs " $+ $script $+ "
    dispa Unloading ' $+ $script $+ ' $chr(40) $+ addon is not properly loaded; use /addon to load it $+ $chr(41)
    halt
  }
}

dialog ppac {
  title "Alias Central"
  size -1 -1 276 267
  option dbu
  icon script\pnp.icon

  box "", 1, 5 5 160 100
  list 2, 15 15 100 80, size sort

  box "", 3, 170 5 100 100
  list 4, 180 15 80 80, size sort

  box "Alias", 5, 5 110 265 150
  edit "", 6, 15 120 248 133, multi read hsbar vsbar

  button "Clipboard", 7, 120 15 37 15
  button "Reindex", 8, 120 80 37 15
  button "Go To", 9,120 35 37 15, hide
}

alias ppac { _dialog -am ppac ppac }

alias -l ppac.scan {

  hmake pnp.ac.index 100

  var %num = $alias(0)
  while (%num > 0) {

    var %afile = $alias(%num)
    if ($dialog(ppac)) { dialog -t ppac Please wait...scanning $remove(%afile,$mircdir) }

    hmake pnp.ac.scanfile 100
    hload -n pnp.ac.scanfile " $+ $alias(%num) $+ "

    var %x = 1,%i = $hget(pnp.ac.scanfile,0).item
    while (%x <= %i) {

      tokenize 32 $hget(pnp.ac.scanfile,%x)
      if (($1) && ($left($1,1) != ;)) { 

        if ($isalias($1)) { 
          if ($hget(pnp.ac.index,$1)) { hadd pnp.ac.index $1 $addtok($hget(pnp.ac.index,$1),%x $+ $chr(44) $+ %afile,127) }
          else { hadd pnp.ac.index $1 %x $+ $chr(44) $+ %afile }

          var %numleft = 0, %numright = 0
          :loop
          if (%x > %i) { break }
          if ($chr(123) isin $hget(pnp.ac.scanfile,%x)) { inc %numleft }
          if ($chr(125) isin $hget(pnp.ac.scanfile,%x)) { inc %numright }
          if (%numleft > %numright) { inc %x | goto loop }
        }
      }
      inc %x
    }
    hfree pnp.ac.scanfile
    dec %num
  }

  ;Scan script files, similar but slightly different
  var %num = $script(0)
  while (%num > 0) {

    var %sfile = $script(%num)
    if ($dialog(ppac)) { dialog -t ppac Please wait...scanning $remove(%sfile,$mircdir) }

    hmake pnp.ac.scanfile 100
    hload -n pnp.ac.scanfile " $+ %sfile $+ "

    var %i = $hfind(pnp.ac.scanfile,alias*,0,w).data
    while (%i > 0) {
      var %item = $hfind(pnp.ac.scanfile,alias*,%i,w).data
      tokenize 32 $hget(pnp.ac.scanfile,%item)
      var %alias = $iif($2 == -l,$3,$2)
      if ($hget(pnp.ac.index,%alias)) { hadd pnp.ac.index %alias $addtok($hget(pnp.ac.index,%alias),%item $+ $chr(44) $+ %sfile,127) }
      else { hadd pnp.ac.index %alias %item $+ $chr(44) $+ %sfile }
      dec %i
    }
    hfree pnp.ac.scanfile
    dec %num
  }
  dialog -t $dname Alias Central

}
on *:DIALOG:ppac:init:0:{ 
  if (!$hget(pnp.ac.index)) { ppac.scan }
  ppac.dupdate
}
on *:DIALOG:ppac:sclick:*:{
  if ($did == 4) { did -c $dname 2 $didwm($dname,2,$did(4).seltext) | goto 2 }
  if ($istok(2 7 8 9,$did,32)) { goto $did }

  :2
  did -r $dname 5,6
  var %found = $numtok($hget(pnp.ac.index,$did(2).seltext),127)

  did -a $dname 5 Alias - Found: %found instance(s)
  var %tok = 1
  while ($gettok($hget(pnp.ac.index,$did(2).seltext),%tok,127)) {

    var %line = $gettok($ifmatch,1,44)
    var %script = $gettok($ifmatch,2,44)

    did -a $dname 6 ; $str(-,40) $+ $crlf
    did -a $dname 6 ; Line: %line Script : $nopath(%script) $+ $crlf
    did -a $dname 6 ; $str(-,40) $+ $str($crlf,2)

    if $hget(pnp.ac.script) { hfree pnp.ac.script }

    hmake pnp.ac.script 100  
    hload -n pnp.ac.script " $+ %script $+ "

    var %l = %line
    var %numleft = 0, %numright = 0

    :loop
    did -a $dname 6 $hget(pnp.ac.script,%l) $+ $crlf
    if (%l > $hget(pnp.ac.script,0).item) { break }
    if ($chr(123) isin $hget(pnp.ac.script,%l)) { inc %numleft }
    if ($chr(125) isin $hget(pnp.ac.script,%l)) { inc %numright }

    if (%numleft > %numright) { inc %l | goto loop }
    did -a $dname 6 $crlf
    inc %tok
  }
  did -e $dname 7,9
  return

  :7
  var %x = 1
  clipboard
  while ($isalias($did(2).seltext,%x).alias) { clipboard -an $ifmatch | inc %x }
  return

  :8
  ;reindex
  if ($hget(pnp.ac.index)) { hfree $ifmatch }
  ppac.scan
  ppac.dupdate
  return

  :9
  var %file = $qt($gettok($gettok($hget(pnp.ac.index,$did(2).seltext),1,127),2,44))
  var %line = $gettok($gettok($hget(pnp.ac.index,$did(2).seltext),1,127),1,44)
  .run notepad++.exe %file -n $+ %line
  return
}

alias -l ppac.dupdate {
  did -b $dname 7,9
  did -r $dname 1-6

  if (($isfile("c:\program files (x86)\notepad++\notepad++.exe")) || ($isfile("c:\program files\notepad++\notepad++.exe"))) { did -v $dname 9 }
  else { did -h $dname 9 }

  var %x = 1
  while ($hget(pnp.ac.index,%x).item) {
    var %alias = $ifmatch
    if ($numtok($hget(pnp.ac.index,%x).data,127) > 1) { did -a $dname 4 %alias }
    did -a $dname 2 %alias 
    inc %x
  }
  did -a $dname 1 Aliases( $+ $did(2).lines $+ )
  did -a $dname 3 Duplicates( $+ $did(4).lines $+ )
  did -a $dname 5 Alias
}
alias ppac.unload {
  if ($hget(pnp.ac.script)) hfree $ifmatch
  if ($hget(pnp.ac.index)) hfree $ifmatch
}
